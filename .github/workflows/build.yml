on:
  push:
    branches:
      - master

name: Build

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create tag
        id: create_tag
        run: |
          tag=builds-$(date +%Y%m%d-%H%M%S)
          echo "::set-output name=tag::$tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release $(date "+%Y-%m-%d %H:%M:%S")
          tag_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    name: Matrix build 
    needs: create-release
    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_path: out/github-pr-tool-x64-darwin.zip
            artifact_name: github-pr-tool-macOS.zip
          - os: ubuntu-latest
            artifact_path: out/github-pr-tool-x64-linux.deb
            artifact_name: github-pr-tool-debian.deb
          # - os: windows-latest
            # artifact_path: out/github-pr-tool-x64-win32.exe
            # artifact_name: github-pr-tool-windows.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: npm ci && npm run make
      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.artifact_path }} 
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/zip
